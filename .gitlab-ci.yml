stages:
  - publish
  - deploy-cloudformation
  - deploy-frontend

publish-frontend:
  when: manual
  stage: publish
  image: docker:latest
  tags:
    - dalfcs_gitlab_docker_ci
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: "tcp://docker:2375"
  services:
    - "docker:dind"
  script:
    - cd frontend/
    - pwd
    - ls
    - docker --version
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD
    - docker build -t b00977003/serverless-expense-tracker . -f Dockerfile
    - docker push b00977003/serverless-expense-tracker
  only:
    - main

deploy-cloudformation:
  when: manual
  stage: deploy-cloudformation
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
    - pwd
    - aws --version
    - aws cloudformation deploy --template-file CloudFormation.yml --stack-name my-stack --parameter-overrides InstanceType=t2.micro KeyName=key-pair InstanceName=MyEC2Instance --capabilities CAPABILITY_NAMED_IAM;
    - echo "Saving environment variables to artifacts"
    - UserPoolId=$(aws cloudformation describe-stacks --stack-name my-stack --query "Stacks[0].Outputs[?OutputKey=='UserPoolId'].OutputValue" --output text)
    - UserPoolClientId=$(aws cloudformation describe-stacks --stack-name my-stack --query "Stacks[0].Outputs[?OutputKey=='UserPoolClientId'].OutputValue" --output text)
    - ApiGatewayUrl=$(aws cloudformation describe-stacks --stack-name my-stack --query "Stacks[0].Outputs[?OutputKey=='ApiGatewayUrl'].OutputValue" --output text)
    - EC2PublicIP=$(aws cloudformation describe-stacks --stack-name my-stack --query "Stacks[0].Outputs[?OutputKey=='EC2PublicIP'].OutputValue" --output text)
    - echo "REACT_APP_USER_POOL_ID=$UserPoolId" > env_variables
    - echo "REACT_APP_CLIENT_ID=$UserPoolClientId" >> env_variables
    - echo "REACT_APP_BASE_URL=$ApiGatewayUrl" >> env_variables
    - echo "EC2_PUBLIC_IP=$EC2PublicIP" >> env_variables
  artifacts:
    paths:
      - env_variables
  only:
    - main


deploy-frontend:
  when: manual
  stage: deploy-frontend
  image: alpine:latest
  before_script:
    - apk update && apk add openssh-client
    - eval $(ssh-agent -s)
    - chmod 600 $SSH_PRIVATE_KEY 
    - ssh-add $SSH_PRIVATE_KEY 
  script:
    - echo "Attempting to SSH into $EC2_PUBLIC_IP"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no ec2-user@$EC2_PUBLIC_IP "echo Connection established"
    - echo "Pulling Docker image"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no ec2-user@$EC2_PUBLIC_IP "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no ec2-user@$EC2_PUBLIC_IP "docker pull b00977003/serverless-expense-tracker"
    - echo "Stopping any running containers"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no ec2-user@$EC2_PUBLIC_IP "docker stop expense-tracker || true"
    - echo "Removing any stopped containers"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no ec2-user@$EC2_PUBLIC_IP "docker rm expense-tracker || true"
    - echo "Fetching environment variables from artifacts"
    - source env_variables
    - echo "Running the new container"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no ec2-user@$EC2_PUBLIC_IP "docker run -d -e REACT_APP_BASE_URL=$REACT_APP_BASE_URL -e REACT_APP_USER_POOL_ID=$REACT_APP_USER_POOL_ID -e REACT_APP_CLIENT_ID=$REACT_APP_CLIENT_ID -p 3000:80 --name expense-tracker b00977003/serverless-expense-tracker"
  artifacts:
    paths:
      - env_variables
  only:
    - main
